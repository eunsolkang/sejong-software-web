{"version":3,"sources":["components/common/Button/Button.js","components/common/Header/Header.js","store/modules/base.js","containers/common/HeaderContainer.js","components/common/Footer/Footer.js","components/common/PageTemplate/PageTemplate.js","components/list/ListWapper/ListWapper.js","components/list/PostList/PostList.js","components/list/Paginaction/Paginaction.js","lib/api.js","store/modules/list.js","containers/list/ListContainer.js","pages/ListPage.js","components/post/PostInfo/PostInfo.js","components/common/MarkdownRender/MarkdownRender.js","components/post/PostBody/PostBody.js","store/modules/post.js","containers/post/Post.js","components/modal/ModalWrapper/ModalWrapper.js","components/modal/AskRemoveModal/AskRemoveModal.js","containers/modal/AskRemoveModalContainer.js","pages/PostPage.js","components/editor/EditorTemplate/EditorTemplate.js","components/editor/EditorHeader/EditorHeader.js","store/modules/editor.js","containers/editor/EditorHeaderContainer.js","components/editor/EditorPane/EditorPane.js","containers/editor/EditorPaneContainer.js","components/editor/PreviewPane/PreviewPane.js","containers/editor/PreviewPaneContainer.js","pages/EditorPage.js","store/modules/login.js","components/login/Login.js","containers/login/LoginContainer.js","pages/LoginPage.js","store/modules/register.js","components/register/Register.js","containers/register/RegisterContainer.js","pages/RegisterPage.js","components/common/NotFound/NotFound.js","pages/NotFoundPage.js","components/App.js","store/configure.js","Root.js","serviceWorker.js","index.js"],"names":["cx","classNames","bind","styles","Div","children","rest","Button","to","onClick","disabled","theme","Element","Link","className","Header","postIx","onRemove","logged","onLogout","key","showModal","createAction","hideModal","initialState","Map","modal","remove","login","handleActions","state","action","modalName","payload","setIn","HeaderContainer","handleLogoutClick","a","console","log","props","LoginActions","window","location","reload","e","handleRemove","BaseActions","this","match","id","params","React","Component","connect","get","dispatch","bindActionCreators","baseActions","loginActions","withRouter","Footer","PageTemplate","ListWapper","PostItem","title","ix","PostList","postList","posts","map","post","toJS","Paginaction","getPost","axios","headers","getPostList","List","pender","type","onSuccess","data","set","fromJS","ListContainer","ListActions","prevProps","prevState","loading","list","pending","listActions","ListPage","PostInfo","publishedDate","userName","moment","format","MarkdownRender","html","renderMarkdown","markdown","setState","marked","breaks","sanitize","break","Prism","highlightAll","markup","__html","dangerouslySetInnerHTML","PostBody","body","api","removePost","delete","Post","initialize","postActions","contents","createdAt","user_ix","ModalWrapper","animate","startAnimation","setTimeout","visible","animation","AskRemoveModal","onConfirm","onCancel","AskRemoveModalContainer","handleCancel","handleConfirm","PostActions","history","push","base","getIn","PostPage","EditorTemplate","leftPercentage","handleMouseMove","clientX","innerWidth","handleMouseUp","document","removeEventListener","handleSeparatorMouseDown","addEventListener","header","editor","preview","leftStyle","flex","rightStyle","separatorStyle","left","style","onMouseDown","EditorHeader","onGoBack","onSubmit","isEdit","changeInput","writePost","board_ix","editPost","put","tags","postId","name","value","EditorHeaderContainer","handleGoBack","goBack","handleSubmit","EditorActions","queryString","parse","search","editorActions","EditorPane","codemirror","cursor","initializeEditor","Codemirror","mode","lineNumbers","lineWrapping","on","handleChangeMarkdown","handleChange","onChangeInput","target","doc","getCursor","getValue","codeMirror","setValue","setCursor","placeholder","onChange","ref","EditorPaneContainer","handleChangeInput","PreviewPane","PreviewPaneContainer","EditorPage","pw","logout","token","checkLogin","changePasswordInput","changeIdInput","loginBox","jwt","onError","Login","userid","password","error","onLogin","onIdChange","onPwChange","onKeyPress","onRegister","autoFocus","href","LoginContainer","handleLogin","handleIdChange","handlePwChange","handleKeyPress","LoginPage","register","changeNameInput","registerBox","Register","onNameChange","RegisterContainer","handleRegister","RegisterActions","handleNameChange","RegisterPage","NotFound","NotFoundPage","App","exact","path","component","reducers","combineReducers","modules","middlewares","penderMiddleware","composeEnhancers","compose","configure","preloadedState","createStore","applyMiddleware","store","Root","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78aaaea0.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Button.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\n\nconst cx = classNames.bind(styles);\n\nconst Div = ({children, ...rest}) => <div {...rest}>{children}</div>\n\nconst Button = ({\n  children, to, onClick, disabled, theme = 'default',\n}) => {\n  const Element = (to && !disabled) ? Link : Div;\n\n  return (\n    <Element\n      to={to}\n      className={cx('button', theme, {disabled})}\n      onClick={disabled ? ()=> null : onClick}>\n      {children}\n    </Element>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Header.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom'\nimport Button from 'components/common/Button';\n\n\nconst cx = classNames.bind(styles);\n\n\nconst Header = ({postIx, onRemove, logged, onLogout}) => {\n  return (\n    <header className={cx('header')}>\n     <div className={cx('header-content')}>\n      <div className={cx('brand')}>\n        <Link to=\"/\">sejong</Link>\n      </div>\n      <div className={cx('right')}>\n        {\n          postIx && logged && [\n            <Button key=\"edit\" theme=\"outline\" to={`/editor?id=${postIx}`}>수정</Button>,\n            <Button key=\"remove\" theme=\"outline\" onClick={onRemove}>삭제</Button>\n          ]\n        }\n        {logged ? <Button theme=\"outline\" onClick={onLogout}>로그아웃</Button> : <Button theme=\"outline\" to=\"/login\">로그인</Button>}\n        {logged && <Button theme=\"outline\" to=\"/editor\">새 포스트</Button>}\n      </div>\n     </div>\n    </header>\n  )\n}\n\nexport default Header\n","import { createAction, handleActions } from 'redux-actions';\n\nimport { Map } from 'immutable';\nimport { pender } from 'redux-pender';\n\nconst SHOW_MODAL = 'base/SHOW_MODAL';\nconst HIDE_MODAL = 'base/HIND_MODAL';\n\nexport const showModal = createAction(SHOW_MODAL);\nexport const hideModal = createAction(HIDE_MODAL);\nconst initialState = Map({\n  modal : Map({\n    remove : false,\n    login : false\n  })\n});\n\nexport default handleActions({\n  [SHOW_MODAL] : (state, action) =>{\n    const { payload : modalName } = action;\n    return state.setIn(['modal', modalName], true);\n  },\n  [HIDE_MODAL] : (state, action) =>{\n    const { payload : modalName } = action;\n    return state.setIn(['modal', modalName], false);\n  }\n}, initialState);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom';\nimport Header from 'components/common/Header'\n\nimport * as baseActions from 'store/modules/base';\nimport * as loginActions from 'store/modules/base';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n\n\nclass HeaderContainer extends React.Component {\n\n\n  handleLogoutClick = async() =>{\n    console.log('test');\n    const { LoginActions, logged } = this.props;\n    if (logged){\n      try{\n        // await LoginActions.logout();\n        window.location.reload();\n      }catch(e){\n        console.log(e);\n      }\n\n    }\n    return;\n  }\n  handleRemove = () =>{\n    console.log('remove!!');\n    const { BaseActions } = this.props;\n    BaseActions.showModal('remove');\n  }\n\n  render () {\n    const { handleRemove, handleLogoutClick } = this\n    const { match, logged } = this.props;\n\n\n    const { id } = match.params;\n\n    return (\n      <Header\n        postIx={id}\n        onRemove={handleRemove}\n        onLogout={handleLogoutClick}\n        logged={logged}\n      />\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    logged : state.login.get('logged')\n  }),\n  (dispatch) => ({\n    BaseActions : bindActionCreators(baseActions, dispatch),\n    LoginActions : bindActionCreators(loginActions, dispatch)\n\n  })\n)(withRouter(HeaderContainer));\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Footer.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom'\n\nconst cx = classNames.bind(styles)\nconst Footer = (props) => {\n  return (\n    <footer className={cx('footer')}>\n      <Link to=\"/\" className={cx('brand')}> sejong</Link>\n      <div className={cx('admin-login')}>관리자 로그인</div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './PageTemplate.scss'\nimport classNames from 'classnames/bind'\nimport HeaderContainer from 'containers/common/HeaderContainer'\nimport Footer from 'components/common/Footer'\n\n\nconst cx = classNames.bind(styles);\n\nconst PageTemplate = ({children}) => {\n  return (\n    <div className={cx('page-template')}>\n      <HeaderContainer/>\n      <main>\n        {children}\n      </main>\n      <Footer/>\n    </div>\n  )\n}\n\nexport default PageTemplate\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './ListWapper.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\n\nconst cx = classNames.bind(styles);\n\nconst ListWapper = ({children}) => {\n  return (\n    <div className={cx('list-wapper')}>\n      {children}\n    </div>\n  )\n}\n\nexport default ListWapper\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './PostList.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport removeMd from 'remove-markdown';\n\n\nconst cx = classNames.bind(styles);\n\nconst PostItem = ({title, ix}) => {\n  return (\n      <div className={cx('post-item')}>\n        <h2><Link to={`/post/${ix}`}>{title}</Link></h2>\n        <div className={cx('date')}>dkdk</div>\n      </div>\n  )\n}\nconst PostList = ({posts}) => {\n  const postList = posts.map(\n    (post) => {\n      const {ix, title} = post.toJS();\n      return (\n        <PostItem\n          title={title}\n          key={ix}\n          ix={ix}\n        />\n      )\n    }\n  );\n  return (\n    <div className={cx('post-list')}>\n      {postList}\n    </div>\n  );\n}\n\n\nexport default PostList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Paginaction.scss';\nimport classNames from 'classnames/bind';\nimport Button from 'components/common/Button'\n\nconst cx = classNames.bind(styles);\n\nconst Paginaction = (props) => {\n  return (\n    <div className={cx('paginaction')}>\n      <Button disabled>\n       이전페이지\n      </Button>\n      <div className={cx('number')}>\n        페이지 1\n      </div>\n      <Button>\n        다음 페이지\n      </Button>\n    </div>\n  )\n}\n\nexport default Paginaction\n","import axios from 'axios';\n\nexport const writePost = ({board_ix, title, contents}) => axios.post('/api/post', {\n  board_ix, title, contents\n},\n{headers: {\n        \"x-access-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpeCI6NCwiaWQiOiJldW5zb2wiLCJpc19hZG1pbiI6ZmFsc2UsImlhdCI6MTU2NTg5NjM3MywiZXhwIjoxNTY2NTAxMTczLCJzdWIiOiJ1c2VySW5mbyJ9.QA53zNuwz57-kbJGvrwnoqgupPykttEts2FYMySSEmo\"\n      }\n});\nexport const getPost = (id) => axios.get(`/api/post/${id}`,\n  {headers: {\n          \"x-access-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpeCI6NCwiaWQiOiJldW5zb2wiLCJpc19hZG1pbiI6ZmFsc2UsImlhdCI6MTU2NTg5NjM3MywiZXhwIjoxNTY2NTAxMTczLCJzdWIiOiJ1c2VySW5mbyJ9.QA53zNuwz57-kbJGvrwnoqgupPykttEts2FYMySSEmo\"\n        }\n  }\n);\n\nexport const getPostList = () => axios.get('/api/post',\n  {headers: {\n          \"x-access-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpeCI6NCwiaWQiOiJldW5zb2wiLCJpc19hZG1pbiI6ZmFsc2UsImlhdCI6MTU2NTg5NjM3MywiZXhwIjoxNTY2NTAxMTczLCJzdWIiOiJ1c2VySW5mbyJ9.QA53zNuwz57-kbJGvrwnoqgupPykttEts2FYMySSEmo\"\n        }\n  }\n)\n\nexport const editPost = ({id, board_ix,  title, contents}) => axios.put(`api/post/${id}`,{\n  board_ix, title, contents\n},\n{headers: {\n        \"x-access-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpeCI6NCwiaWQiOiJldW5zb2wiLCJpc19hZG1pbiI6ZmFsc2UsImlhdCI6MTU2NTg5NjM3MywiZXhwIjoxNTY2NTAxMTczLCJzdWIiOiJ1c2VySW5mbyJ9.QA53zNuwz57-kbJGvrwnoqgupPykttEts2FYMySSEmo\"\n      }\n}\n)\n\nexport const removePost = (id) => axios.delete(`/api/post/${id}`,\n  {headers: {\n          \"x-access-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpeCI6NCwiaWQiOiJldW5zb2wiLCJpc19hZG1pbiI6ZmFsc2UsImlhdCI6MTU2NTg5NjM3MywiZXhwIjoxNTY2NTAxMTczLCJzdWIiOiJ1c2VySW5mbyJ9.QA53zNuwz57-kbJGvrwnoqgupPykttEts2FYMySSEmo\"\n        }\n  }\n)\nexport const login = ({id, pw}) => axios.post('api/auth/login', {id, pw});\nexport const checkLogin = () => axios.get('/api/auth/check');\nexport const logout = ({token}) => axios.post('/api/auth/logout')\nexport const register = ({name, id, pw}) => axios.post('/api/auth/register', {name, id, pw})\n","import { createAction, handleActions } from 'redux-actions';\n\nimport { Map, List, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\n\nimport * as api from  'lib/api';\n\nconst GET_POST_LIST = 'list/GET_POST_LIST';\n\nexport const getPostList = createAction(GET_POST_LIST, api.getPostList);\n\nconst initialState = Map({\n  posts : List()\n});\n\nexport default handleActions({\n  ...pender({\n    type : GET_POST_LIST,\n    onSuccess : (state, action) => {\n      const { data: posts } = action.payload;\n      return state.set('posts', fromJS(posts))\n    }\n  })\n}, initialState);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PostList from 'components/list/PostList';\nimport Paginaction from 'components/list/Paginaction'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as listActions from 'store/modules/list';\n\nclass ListContainer extends React.Component {\n  getPostList = () =>{\n    const {ListActions } = this.props;\n    ListActions.getPostList();\n  }\n  componentDidMount(){\n    this.getPostList();\n  }\n  componentDidUpdate(prevProps, prevState){\n\n  }\n  render () {\n    const { loading, posts } = this.props;\n    if (loading ) return null;\n\n    return (\n      <div>\n        <PostList posts={posts}/>\n        <Paginaction/>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => ({\n    posts : state.list.get('posts'),\n    loading : state.pender.pending['list/GET_POST_LIST']\n  }),\n  (dispatch) => ({\n    ListActions : bindActionCreators(listActions, dispatch)\n  })\n)(ListContainer);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PageTemplate from 'components/common/PageTemplate'\nimport ListWapper from 'components/list/ListWapper';\nimport ListContainer from 'containers/list/ListContainer'\n\nconst ListPage = () => {\n  return (\n    <PageTemplate>\n      <ListWapper>\n        <ListContainer/>\n      </ListWapper>\n    </PageTemplate>\n  )\n}\n\nexport default ListPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames/bind';\nimport styles from './PostInfo.scss'\n\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst cx = classNames.bind(styles);\n\nconst PostInfo = ({publishedDate, title, userName}) => {\n  return (\n    <div className={cx('post-info')}>\n      <div className={cx('info')}>\n        <h1>{title}</h1>\n        <div className={cx('userName')}>\n          {userName}\n        </div>\n        <div className={cx('date')}>\n          {moment(publishedDate).format('ll')}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PostInfo;\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport styles from './MarkdownRender.scss';\nimport classNames from 'classnames/bind';\n\nimport marked from 'marked';\n\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism-okaidia.css';\nimport 'prismjs/components/prism-bash.min.js'\nimport 'prismjs/components/prism-javascript.min.js'\nimport 'prismjs/components/prism-jsx.min.js';\nimport 'prismjs/components/prism-css.min.js';\n\nconst cx = classNames.bind(styles);\n\nclass MarkdownRender extends React.Component {\n  state = {\n    html : ''\n  }\n  renderMarkdown = () =>{\n    const { markdown } = this.props;\n    if(!markdown){\n      this.setState({\n        html : ''\n      });\n      return;\n\n    }\n    this.setState({\n      html : marked(markdown, {\n        breaks: true,\n        sanitize: true\n      })\n    });\n  }\n  constructor(props){\n    super(props);\n    const { markdown } = props;\n    this.state = {\n      html: markdown ? marked(props.markdown, { break: true, sanitize: true}) : ''\n    }\n  }\n  componentDidUpdate(prevProps, prevState){\n    if(prevProps.markdown !== this.props.markdown){\n      this.renderMarkdown();\n    }\n    if(prevState.html !== this.state.html){\n      Prism.highlightAll();\n    }\n  }\n\n  render () {\n    const { html } = this.state;\n\n    const markup = {\n      __html : html\n    }\n\n    return (\n      <div className={cx('markdown-render')} dangerouslySetInnerHTML={markup}/>\n    )\n  }\n}\n\nexport default MarkdownRender;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames/bind';\nimport styles from './PostBody.scss'\nimport MarkdownRender from 'components/common/MarkdownRender';\n\nconst cx = classNames.bind(styles);\n\nconst PostBody = ({body}) => {\n  return (\n    <div className={cx('post-body')}>\n      <div className={cx('paper')}>\n        <MarkdownRender markdown={body}/>\n      </div>\n    </div>\n  )\n}\n\nexport default PostBody;\n","import { createAction, handleActions } from 'redux-actions';\n\nimport { Map, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\n\nimport * as api from 'lib/api';\n\nconst GET_POST = 'post/GET_POST';\nconst REMOVE_POST = 'post/REMOVE_POST';\n\nexport const getPost = createAction(GET_POST, api.getPost);\nexport const removePost = createAction(REMOVE_POST, api.removePost);\n\nconst initialState = Map({\n  post : Map({})\n});\n\nexport default handleActions({\n  ...pender({\n    type: GET_POST,\n    onSuccess: (state, action) => {\n      const { data: post }= action.payload;\n      return state.set('post', fromJS(post))\n    }\n  })\n}, initialState);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PostInfo from 'components/post/PostInfo';\nimport PostBody from 'components/post/PostBody';\nimport * as postActions from 'store/modules/post';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n\nclass Post extends React.Component {\n  initialize = async ()=>{\n    const {postActions, id} = this.props;\n    try{\n      await postActions.getPost(id);\n    }catch(e){\n      console.log(e);\n    }\n  }\n  componentDidMount(){\n    this.initialize();\n  }\n  render () {\n    const { loading, post} = this.props;\n\n    if(loading) return null;\n\n    const { title, contents, createdAt, user_ix } = post.toJS();\n\n    return (\n      <div>\n        <PostInfo title={title} publishedDate={createdAt} userName={user_ix}/>\n        <PostBody body={contents}/>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => ({\n    post: state.post.get('post'),\n    loading: state.pender.pending['post/GET_POST']\n  }),\n  (dispatch) => ({\n    postActions: bindActionCreators(postActions, dispatch)\n  })\n)(Post);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './ModalWrapper.scss'\nimport classNames from 'classnames/bind';\n\nconst cx  = classNames.bind(styles)\n\nclass ModalWrapper extends React.Component {\n\n  state = {\n    animate : false\n  }\n  startAnimation = () =>{\n    this.setState({\n      animate : true\n    })\n    setTimeout(()=>{\n      this.setState({\n        animate : false\n      })\n    }, 250)\n  }\n  componentDidUpdate(prevProps, prevState){\n    if(prevProps.visible !== this.props.visible){\n      this.startAnimation();\n    }\n  }\n  render () {\n\n    const { children, visible } = this.props;\n    const { animate } = this.state;\n    if(!visible && !animate ) return null;\n\n    const animation = animate && (visible ? 'enter' : 'leave')\n    return (\n      <div>\n        <div className={cx('gray-background', animation)}/>\n        <div className={cx('modal-wrraper')}>\n          <div className={cx('modal', animation)}>\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalWrapper;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './AskRemoveModal.scss';\nimport classNames from 'classnames/bind';\nimport ModalWrapper from 'components/modal/ModalWrapper';\nimport Button from 'components/common/Button'\n\nconst cx = classNames.bind(styles)\n\nconst AskRemoveModal = ({visible, onConfirm, onCancel}) => {\n  return (\n    <ModalWrapper visible={visible}>\n      <div className={cx('question')}>\n        <div className={cx('title')}>포스트 삭제</div>\n        <div className={cx('description')}>이 포스트를 정말로 삭제하시겠습니까?</div>\n      </div>\n      <div className={cx('options')}>\n        <Button theme=\"gray\" onClick={onCancel}>취소</Button>\n        <Button onClick={onConfirm}>삭제</Button>\n      </div>\n    </ModalWrapper>\n  )\n}\n\nexport default AskRemoveModal\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as baseActions from 'store/modules/base';\nimport * as postActions from 'store/modules/post';\nimport AskRemoveModal from 'components/modal/AskRemoveModal';\nimport { withRouter } from 'react-router-dom';\n\nclass AskRemoveModalContainer extends React.Component {\n  handleCancel = () =>{\n    const { BaseActions } = this.props;\n    BaseActions.hideModal('remove');\n  }\n  handleConfirm = async () =>{\n\n    const { BaseActions, PostActions, history, match } = this.props;\n    const { id } = match.params;\n\n    try {\n\n      await PostActions.removePost(id);\n      BaseActions.hideModal('remove');\n      history.push('/');\n    } catch(e){\n      console.log(e);\n    }\n  }\n  render () {\n    const { visible } = this.props;\n    const { handleCancel, handleConfirm } = this;\n\n    return (\n      <AskRemoveModal visible={visible} onCancel={handleCancel} onConfirm={handleConfirm} />\n    )\n  }\n}\n\nexport default connect(\n  (state) => ({\n    visible : state.base.getIn(['modal', 'remove'])\n  }),\n  (dispatch) => ({\n    BaseActions : bindActionCreators(baseActions, dispatch),\n    PostActions : bindActionCreators(postActions, dispatch)\n  })\n)(withRouter(AskRemoveModalContainer));\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PageTemplate from 'components/common/PageTemplate'\nimport Post from 'containers/post/Post';\nimport AskRemoveModalContainer from 'containers/modal/AskRemoveModalContainer';\n\n\nconst PostPage = ({match}) => {\n  const { id } = match.params\n  return (\n    <PageTemplate>\n      <Post id={id}/>\n      <AskRemoveModalContainer/>\n    </PageTemplate>\n  )\n}\n\nexport default PostPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames/bind';\nimport styles from './EditorTemplate.scss'\n\nconst cx = classNames.bind(styles);\n\nclass EditorTemplate extends React.Component {\n  state = {\n    leftPercentage: 0.5\n  }\n  handleMouseMove = (e) =>{\n    this.setState({\n      leftPercentage: e.clientX / window.innerWidth\n    });\n  }\n  handleMouseUp = (e) =>{\n    document.body.removeEventListener('mousemove', this.handleMouseMove);\n    window.removeEventListener('mouseup', this.handleMouseUp)\n  }\n  handleSeparatorMouseDown = (e) =>{\n    document.body.addEventListener('mousemove', this.handleMouseMove);\n    window.addEventListener('mouseup', this.handleMouseUp)\n  }\n  render () {\n    const { header, editor, preview } = this.props;\n    const { leftPercentage } = this.state;\n    const { handleSeparatorMouseDown } = this;\n    const leftStyle = {\n      flex: leftPercentage\n    };\n    const rightStyle = {\n      flex : 1 - leftPercentage\n    };\n    const separatorStyle = {\n      left : `${leftPercentage * 100}%`\n    };\n\n    return (\n      <div className={cx('editor-template')}>\n        {header}\n        <div className={cx('panes')}>\n          <div className={cx('pane', 'editor')} style={leftStyle}>\n            {editor}\n          </div>\n          <div className={cx('pane', 'preview')} style={rightStyle}>\n            {preview}\n          </div>\n          <div\n            className={cx('separator')}\n            style={separatorStyle}\n            onMouseDown={handleSeparatorMouseDown}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EditorTemplate;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames/bind';\nimport styles from './EditorHeader.scss'\nimport Button from 'components/common/Button';\n\nconst cx = classNames.bind(styles);\n\nconst EditorHeader = ({onGoBack, onSubmit, isEdit}) => {\n  return (\n    <div className={cx('editor-header')}>\n      <div className={cx('back')}>\n        <Button onClick={onGoBack} theme=\"outline\">뒤로가기</Button>\n      </div>\n      <div className={cx('submit')}>\n        <Button onClick={onSubmit} theme=\"outline\">{isEdit ? '수정' : '작성'}하기</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default EditorHeader;\n","import { createAction, handleActions } from 'redux-actions';\nimport * as api from 'lib/api'\n\nimport { Map } from 'immutable';\nimport { pender } from 'redux-pender';\n\nconst GET_POST = 'editor/GET_POST'\nconst INITIALIZE = 'editor/INITIALIZE';\nconst CHANGE_INPUT = 'editor/CHANGE_INPUT';\nconst WRITE_POST = 'editor/WRITE_POST';\nconst EDIT_POST = 'editor/EDIT_POST'\n\nexport const getPost = createAction(GET_POST, api.getPost)\nexport const initialize = createAction(INITIALIZE);\nexport const changeInput = createAction(CHANGE_INPUT);\nexport const writePost = createAction(WRITE_POST, api.writePost);\nexport const editPost = createAction(EDIT_POST, api.editPost);\n\nconst initialState = Map({\n  title : '',\n  markdown: '',\n  tags: '',\n  postId : null\n})\n\nexport default handleActions({\n  [INITIALIZE] : (state, action) => initialState,\n  [CHANGE_INPUT]: (state, action) => {\n    const { name, value } = action.payload;\n    return state.set(name, value);\n  },\n  ...pender({\n    type: WRITE_POST,\n    onSuccess: (state, action) => {\n      const { ix } = action.payload.data;\n      return state.set('postId', ix);\n    }\n  }),\n  ...pender({\n    type : GET_POST,\n    onSuccess : (state, action ) => {\n      const { ix, title, contents } = action.payload.data;\n      return state.set('title', title)\n                  .set('markdown', contents)\n    }\n  })\n}, initialState);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport EditorHeader from 'components/editor/EditorHeader';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\n\nimport * as editorActions from 'store/modules/editor';\n\nclass EditorHeaderContainer extends React.Component {\n  componentDidMount(){\n    const { EditorActions , location } = this.props;\n    EditorActions.initialize();\n    const { id } = queryString.parse(location.search);\n    if( id ) {\n      EditorActions.getPost(id);\n    }\n  }\n  handleGoBack = () =>{\n    const { history } = this.props;\n    history.goBack();\n  }\n\n  handleSubmit = async() =>{\n    const { title, markdown, tags, EditorActions, history, location} = this.props;\n    const post = {\n      board_ix : 2,\n      title : title,\n      contents : markdown,\n    };\n    try{\n      const { id } = queryString.parse(location.search);\n      if(id){\n        await EditorActions.editPost({id, ...post});\n        history.push(`/post/${id}`);\n        return;\n      }\n      await EditorActions.writePost(post);\n      history.push(`/post/${this.props.postId}`);\n    } catch(e){\n      console.log(e);\n    }\n  }\n  render () {\n    const { handleGoBack, handleSubmit } = this;\n    const {id } = queryString.parse(this.props.location.search);\n    console.log(id);\n    return (\n      <EditorHeader\n        onGoBack={handleGoBack}\n        onSubmit={handleSubmit}\n        isEdit={id ? true : false}\n      />\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    title : state.editor.get('title'),\n    markdown : state.editor.get('markdown'),\n    tags : state.editor.get('tags'),\n    postId : state.editor.get('postId')\n  }),\n  (dispatch) => ({\n    EditorActions : bindActionCreators(editorActions, dispatch)\n  })\n)(withRouter(EditorHeaderContainer));\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames/bind';\nimport styles from './EditorPane.scss'\n\nimport Codemirror from 'codemirror'\n\nimport 'codemirror/mode/markdown/markdown';\n\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/jsx/jsx';\nimport 'codemirror/mode/css/css';\nimport 'codemirror/mode/shell/shell';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css'\n\nconst cx = classNames.bind(styles);\n\n\n\nclass EditorPane extends React.Component {\n\n  editor = null;\n  codemirror = null;\n  cursor = null;\n\n\n  initializeEditor = () =>{\n    this.codemirror = Codemirror(this.editor, {\n      mode : 'markdown',\n      theme : 'monokai',\n      lineNumbers: true,\n      lineWrapping: true\n    });\n    this.codemirror.on('change', this.handleChangeMarkdown);\n  }\n  componentDidMount(){\n    this.initializeEditor();\n\n\n\n  }\n  handleChange = (e) => {\n    const { onChangeInput } = this.props;\n    const { value, name} = e.target;\n    onChangeInput({name, value});\n  }\n  handleChangeMarkdown = (doc) => {\n    const { onChangeInput }= this.props;\n    this.cursor = doc.getCursor();\n    onChangeInput({\n      name : 'markdown',\n      value : doc.getValue()\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(prevProps.markdown !== this.props.markdown){\n      const { codeMirror, cursor } = this;\n      if(!codeMirror) return;\n      codeMirror.setValue(this.props.markdown);\n      if(!cursor) return;\n      codeMirror.setCursor(cursor);\n    }\n  }\n  render () {\n    const { handleChange } = this;\n    const { tags, title, markdown } = this.props;\n\n    return (\n      <div className={cx('editor-pane')}>\n        <input\n          className={cx('title')}\n          placeholder=\"제목을 입력하세요\"\n          name=\"title\"\n          value={title}\n          onChange={handleChange}\n        />\n      <div className={cx('code-editor')} ref={ref => this.editor=ref}></div>\n        <div className={cx('tags')}>\n          <div className={cx('description')}>테그</div>\n          <input\n            placeholder=\"태그를 입력하세요 (쉼표로 구분)\"\n            name=\"tags\"\n            value={tags}\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EditorPane;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport EditorPane from 'components/editor/EditorPane';\nimport {bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as editorActions from 'store/modules/editor';\n\nclass EditorPaneContainer extends React.Component {\n  handleChangeInput = ({name, value}) => {\n    const { EditorActions } = this.props;\n    EditorActions.changeInput({name, value});\n  }\n  render () {\n    const { title, markdown } = this.props;\n    const { handleChangeInput } = this;\n    console.log(markdown);\n    return (\n      <EditorPane\n        title={title}\n        markdown={markdown}\n        onChangeInput={handleChangeInput}\n      />\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    title : state.editor.get('title'),\n    markdown : state.editor.get('markdown'),\n  }),\n  (dispatch) => ({\n    EditorActions : bindActionCreators(editorActions, dispatch)\n  })\n)(EditorPaneContainer);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames/bind';\nimport styles from './PreviewPane.scss'\nimport MarkdownRender from 'components/common/MarkdownRender';\n\nconst cx = classNames.bind(styles);\n\nconst PreviewPane = ({markdown, title}) => (\n  <div className={cx('preview-pane')}>\n    <h1 className={cx('title')}>\n      {title}\n    </h1>\n    <div>\n      <MarkdownRender markdown={markdown}/>\n    </div>\n  </div>\n);\n\nexport default PreviewPane;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport PreviewPane from 'components/editor/PreviewPane';\n\nclass PreviewPaneContainer extends React.Component {\n  render () {\n    const { markdown, title } = this.props;\n    console.log(markdown);\n    return (\n      <PreviewPane title={title} markdown={markdown}/>\n    )\n  }\n}\n\nexport default connect(\n  (state) => ({\n    title : state.editor.get('title'),\n    markdown : state.editor.get('markdown')\n  })\n)(PreviewPaneContainer);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport EditorTemplate from 'components/editor/EditorTemplate'\nimport EditorHeaderContainer from 'containers/editor/EditorHeaderContainer';\nimport EditorPaneContainer from 'containers/editor/EditorPaneContainer'\nimport PreviewPaneContainer from 'containers/editor/PreviewPaneContainer'\n\nconst EditorPage = (props) => {\n  return (\n    <EditorTemplate\n      header={<EditorHeaderContainer/>}\n      editor={<EditorPaneContainer/>}\n      preview={<PreviewPaneContainer/>}/>\n  )\n}\n\nexport default EditorPage\n","import { createAction, handleActions } from 'redux-actions';\n\nimport { Map } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from 'lib/api'\n\nconst LOGIN = 'login/LOGIN';\nconst LOGOUT = 'login/LOGOUT';\nconst CHECK_LOGIN = 'login/CHECK_LOGIN';\nconst CHANGE_ID_INPUT = 'login/CHANGE_ID_INPUT';\nconst CHANGE_PASSWORD_INPUT = 'login/CHANGE_PASSWORD_INPUT';\n\nexport const login = createAction(LOGIN, api.login);\nexport const logout = createAction(LOGOUT, api.logout);\nexport const checkLogin = createAction(CHECK_LOGIN, api.checkLogin);\nexport const changePasswordInput = createAction(CHANGE_PASSWORD_INPUT);\nexport const changeIdInput = createAction(CHANGE_ID_INPUT);\n\nconst initialState = Map({\n  loginBox: Map({\n    id : '',\n    pw : '',\n  }),\n  logged : false,\n  jwt : false\n\n});\n\nexport default handleActions({\n  ...pender({\n    type: LOGIN,\n    onSuccess: (state, action) =>{\n      const { token }= action.payload.data;\n      console.log(token);\n      return state.set('logged', true)\n                  .set('jwt', token)\n    },\n    onError : (state, action) => {\n      return state.setIn(['loginBox', 'error'], true)\n                  .setIn(['loginBox', 'id'], '')\n                  .setIn(['loginBox', 'pw'], '');\n    }\n  }),\n  ...pender({\n    type : CHECK_LOGIN,\n    onSuccess: (state, action) => {\n      const { logged } = action.payload.data;\n      return state.set('logged', logged);\n    }\n  }),\n  [CHANGE_ID_INPUT]: (state, action) => {\n    const { payload : value} = action;\n    return state.setIn(['loginBox', 'id'], value);\n  },\n  [CHANGE_PASSWORD_INPUT]: (state, action) => {\n    const { payload : value} = action;\n    return state.setIn(['loginBox', 'pw'], value);\n  }\n\n}, initialState);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Login.scss'\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\n\nconst Login = ({\n  userid,\n  password, error, onLogin, onIdChange, onPwChange, onKeyPress, onRegister\n}) => {\n  return (\n    <div className={cx('form-box')}>\n      <div className={cx('form')}>\n        <div className={cx('title')}>로그인</div>\n        <div className={cx('description')}>ID</div>\n        <input autoFocus type=\"text\" placeholder=\"아이디 입력\" value={userid} onChange={onIdChange}\n          onKeyPress={onKeyPress}/>\n        <div className={cx('description', 'password')}>PW</div>\n        <input autoFocus type=\"password\" placeholder=\"비밀번호 입력\" value={password} onChange={onPwChange}\n          onKeyPress={onKeyPress}/>\n        { error && <div className={cx('error')}>로그인 실패</div>}\n        <div className={cx('login', 'login-btn')} onClick={onLogin}>로그인</div>\n        <div className={cx('register')} onClick={onRegister}>계정이 없다면? <a href=\"./register\">계정만들기</a></div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as LoginActions from 'store/modules/login';\nimport Login from 'components/login/Login';\nimport { withRouter } from 'react-router-dom';\nimport storage from 'lib/storage';\n\nclass LoginContainer extends React.Component {\n  handleLogin = async () =>{\n\n    const { LoginActions, id, pw, history} = this.props;\n    console.log(id, pw);\n    try{\n      await LoginActions.login({id, pw});\n      console.log('로그인 성공');\n      const {jwt, logged }= this.props;\n      history.push('/')\n\n    }catch(e){\n      console.log(e);\n    }\n  }\n  handleIdChange = (e) => {\n    console.log('아이디 변경');\n    const { value } = e.target;\n    const { LoginActions } = this.props;\n    LoginActions.changeIdInput(value);\n  }\n  handlePwChange = (e) => {\n    console.log('비밀번호 변경');\n    const { value } = e.target;\n    const { LoginActions } = this.props;\n    LoginActions.changePasswordInput(value);\n  }\n  handleKeyPress = (e) => {\n    if(e.key === 'enter'){\n      this.handleLogin();\n    }\n  }\n\n  render () {\n    const {\n      handleLogin, handleIdChange, handlePwChange, handleKeyPress\n    } = this;\n    const { error, pw, id}= this.props;\n    return (\n      <Login\n        onLogin={handleLogin} onIdChange={handleIdChange} onPwChange={handlePwChange} onKeyPress={handleKeyPress} userid={id} password={pw}\n      />\n    )\n  }\n}\n\nexport default connect(\n  (state) => ({\n    id : state.login.getIn(['loginBox', 'id']),\n    pw : state.login.getIn(['loginBox', 'pw']),\n    error : state.login.getIn(['loginBox', 'error']),\n    jwt : state.login.get('jwt'),\n    logged : state.login.get('logged'),\n  }),\n  (dispatch) => ({\n    LoginActions : bindActionCreators(LoginActions, dispatch)\n  })\n)(withRouter(LoginContainer));\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PageTemplate from 'components/common/PageTemplate'\nimport LoginContainer from 'containers/login/LoginContainer'\n\nconst LoginPage = (props) => {\n  return (\n    <PageTemplate>\n      <LoginContainer/>\n    </PageTemplate>\n  )\n}\n\nexport default LoginPage\n","import { createAction, handleActions } from 'redux-actions';\n\nimport { Map } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from 'lib/api'\n\nconst REGISTER = 'register/REGISTER';\nconst CHANGE_NAME_INPUT = 'register/CHANGE_NAME_INPUT';\nconst CHANGE_ID_INPUT = 'register/CHANGE_ID_INPUT';\nconst CHANGE_PASSWORD_INPUT = 'register/CHANGE_PASSWORD_INPUT';\n\nexport const register = createAction(REGISTER, api.register);\nexport const changePasswordInput = createAction(CHANGE_PASSWORD_INPUT);\nexport const changeNameInput = createAction(CHANGE_NAME_INPUT);\nexport const changeIdInput = createAction(CHANGE_ID_INPUT);\n\nconst initialState = Map({\n  registerBox: Map({\n    name : '',\n    id : '',\n    pw : ''\n  }),\n});\n\nexport default handleActions({\n  ...pender({\n    type: REGISTER,\n    onSuccess: (state, action) =>{\n\n    },\n    onError : (state, action) => {\n      return state.setIn(['registerBox', 'name'], '')\n                  .setIn(['registerBox', 'id'], '')\n                  .setIn(['registerBox', 'pw'], '');\n    }\n  }),\n  [CHANGE_NAME_INPUT]: (state, action) => {\n    const { payload : value} = action;\n    return state.setIn(['registerBox', 'name'], value);\n  },\n  [CHANGE_ID_INPUT]: (state, action) => {\n    const { payload : value} = action;\n    return state.setIn(['registerBox', 'id'], value);\n  },\n  [CHANGE_PASSWORD_INPUT]: (state, action) => {\n    const { payload : value} = action;\n    return state.setIn(['registerBox', 'pw'], value);\n  },\n\n}, initialState);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Register.scss'\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\n\nconst Register = ({\n  userid,\n  password,\n  name, error, onIdChange, onPwChange, onNameChange, onKeyPress, onRegister\n}) => {\n  return (\n    <div className={cx('form-box')}>\n      <div className={cx('form')}>\n        <div className={cx('title')}>회원가입</div>\n        <div className={cx('description', 'name')}>NAME</div>\n        <input autoFocus type=\"text\" placeholder=\"이름 입력\" value={name} onChange={onNameChange}\n          onKeyPress={onKeyPress}/>\n\n        <div className={cx('description', 'id')}>ID</div>\n        <input autoFocus type=\"text\" placeholder=\"아이디 입력\" value={userid} onChange={onIdChange}\n          onKeyPress={onKeyPress}/>\n\n        <div className={cx('description', 'password')}>PW</div>\n        <input autoFocus type=\"password\" placeholder=\"비밀번호 입력\" value={password} onChange={onPwChange}\n          onKeyPress={onKeyPress}/>\n        { error && <div className={cx('error')}>회원가입 실패</div>}\n        <div className={cx('login', 'login-btn')} onClick={onRegister}>회원가입</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Register\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as RegisterActions from 'store/modules/register';\nimport Register from 'components/register/Register';\nimport { withRouter } from 'react-router-dom'\n\nclass RegisterContainer extends React.Component {\n  handleRegister = async () =>{\n\n    const { RegisterActions, id, pw, name,history }= this.props;\n    console.log(id, pw);\n    try{\n      await RegisterActions.register({name, id, pw});\n      console.log('회원가입 성공');\n      history.push('/')\n    }catch(e){\n      console.log(e);\n    }\n  }\n  handleIdChange = (e) => {\n    console.log('아이디 변경');\n    const { value } = e.target;\n    const { RegisterActions } = this.props;\n    RegisterActions.changeIdInput(value);\n  }\n  handlePwChange = (e) => {\n    console.log('비밀번호 변경');\n    const { value } = e.target;\n    const { RegisterActions } = this.props;\n    RegisterActions.changePasswordInput(value);\n  }\n  handleNameChange = (e) => {\n    console.log('이름 변경');\n    const { value } = e.target;\n    const { RegisterActions } = this.props;\n    RegisterActions.changeNameInput(value);\n  }\n  handleKeyPress = (e) => {\n    if(e.key === 'enter'){\n      this.handleRegister();\n    }\n  }\n  render () {\n    const {\n      handleRegister, handleIdChange, handlePwChange, handleKeyPress, handleNameChange\n    } = this;\n    const { error, pw, id, name}= this.props;\n    return (\n      <Register\n        onRegister={handleRegister} onNameChange={handleNameChange} onIdChange={handleIdChange} onPwChange={handlePwChange} onKeyPress={handleKeyPress} name={name} userid={id} password={pw}\n      />\n    )\n  }\n}\n\nexport default connect(\n  (state) => ({\n    name : state.register.getIn(['registerBox', 'name']),\n    id : state.register.getIn(['registerBox', 'id']),\n    pw: state.register.getIn(['registerBox', 'pw'])\n  }),\n  (dispatch) => ({\n    RegisterActions : bindActionCreators(RegisterActions, dispatch)\n  })\n)(withRouter(RegisterContainer));\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PageTemplate from 'components/common/PageTemplate'\nimport RegisterContainer from 'containers/register/RegisterContainer'\n\nconst RegisterPage = (props) => {\n  return (\n    <PageTemplate>\n      <RegisterContainer/>\n    </PageTemplate>\n  )\n}\n\nexport default RegisterPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './NotFound.scss';\nimport classNames from 'classnames/bind';\nimport Button from 'components/common/Button/Button'\n\nconst cx = classNames.bind(styles);\n\nconst NotFound = ({onGoBack}) => {\n  return (\n    <div className={cx('not-found')}>\n      <h2>존재하지 않는 페이지입니다</h2>\n      <Button onClick={onGoBack} theme=\"outline\">\n        돌아가기\n      </Button>\n    </div>\n  )\n}\nexport default NotFound;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport NotFound from 'components/common/NotFound'\n\n\nconst NotFoundPage = ({history}) => {\n  return (\n    <NotFound onGoBack={history.goBack}/>\n  )\n}\n\nexport default NotFoundPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Switch, Route } from 'react-router-dom';\nimport { ListPage, PostPage, EditorPage, LoginPage, NotFoundPage, RegisterPage} from 'pages'\n\nconst App = (props) => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={ListPage}></Route>\n        <Route exact path=\"/page/:page\" component={ListPage}></Route>\n        <Route exact path=\"/tag/:tag/:page?\" component={ListPage}></Route>\n        <Route exact path=\"/post/:id\" component={PostPage}></Route>\n        <Route exact path=\"/editor\" component={EditorPage}></Route>\n        <Route exact path=\"/login\" component={LoginPage}></Route>\n        <Route exact path=\"/register\" component={RegisterPage}></Route>\n        <Route component={NotFoundPage}></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport penderMiddleware from 'redux-pender';\nimport * as modules from './modules';\n\nconst reducers = combineReducers(modules);\nconst middlewares = [penderMiddleware()];\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = devtools || compose;\n\nconst configure = (preloadedState) => createStore(reducers, preloadedState, composeEnhancers(\n  applyMiddleware(...middlewares)\n))\n\nexport default configure\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from 'components/App';\nimport { Provider } from 'react-redux';\nimport configure from 'store/configure';\nimport { CookiesProvider } from 'react-cookie';\n\nconst store = configure();\n\nconst Root = (props) => {\n  return (\n    <CookiesProvider>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App/>\n        </BrowserRouter>\n      </Provider>\n    </CookiesProvider>\n\n  )\n}\n\nexport default Root\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\nimport 'styles/base.scss';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}