{"ast":null,"code":"import _defineProperty from \"/Users/gang-eunsol/Desktop/blog-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createAction, handleActions } from 'redux-actions';\nimport { Map, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from 'lib/api';\nconst GET_POST = 'post/GET_POST';\nexport const getPost = createAction(GET_POST, api.getPost);\nconst initialState = Map({\n  post: Map({})\n});\nexport default handleActions(_objectSpread({}, pender({\n  type: GET_POST,\n  onSuccess: (state, action) => {\n    const post = action.payload.data;\n    return state.set('post', fromJS(post));\n  }\n})), initialState);","map":{"version":3,"sources":["/Users/gang-eunsol/Desktop/blog-project/src/store/modules/post.js"],"names":["createAction","handleActions","Map","fromJS","pender","api","GET_POST","getPost","initialState","post","type","onSuccess","state","action","payload","data","set"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,SAASC,GAAT,EAAcC,MAAd,QAA4B,WAA5B;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;AAEA,MAAMC,QAAQ,GAAG,eAAjB;AAEA,OAAO,MAAMC,OAAO,GAAGP,YAAY,CAACM,QAAD,EAAWD,GAAG,CAACE,OAAf,CAA5B;AAEP,MAAMC,YAAY,GAAGN,GAAG,CAAC;AACvBO,EAAAA,IAAI,EAAGP,GAAG,CAAC,EAAD;AADa,CAAD,CAAxB;AAKA,eAAeD,aAAa,mBACvBG,MAAM,CAAC;AACRM,EAAAA,IAAI,EAAEJ,QADE;AAERK,EAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAAA,UACdJ,IADc,GACNI,MAAM,CAACC,OADD,CACpBC,IADoB;AAE5B,WAAOH,KAAK,CAACI,GAAN,CAAU,MAAV,EAAkBb,MAAM,CAACM,IAAD,CAAxB,CAAP;AACD;AALO,CAAD,CADiB,GAQzBD,YARyB,CAA5B","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\n\nimport { Map, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\n\nimport * as api from 'lib/api';\n\nconst GET_POST = 'post/GET_POST';\n\nexport const getPost = createAction(GET_POST, api.getPost);\n\nconst initialState = Map({\n  post : Map({})\n\n});\n\nexport default handleActions({\n  ...pender({\n    type: GET_POST,\n    onSuccess: (state, action) => {\n      const { data: post }= action.payload;\n      return state.set('post', fromJS(post))\n    }\n  })\n}, initialState);\n"]},"metadata":{},"sourceType":"module"}