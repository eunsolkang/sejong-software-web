{"ast":null,"code":"var _jsxFileName = \"/Users/gang-eunsol/Desktop/blog-project/src/containers/login/LoginContainer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as LoginActions from 'store/modules/login';\nimport Login from 'components/login/Login';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogin = async () => {\n      const _this$props = this.props,\n            LoginActions = _this$props.LoginActions,\n            id = _this$props.id,\n            password = _this$props.password,\n            history = _this$props.history;\n      console.log(userid, password);\n\n      try {\n        await LoginActions.login({\n          userid,\n          password\n        });\n        history.push('/');\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handleIdChange = e => {\n      console.log('아이디 변경');\n      const value = e.target.value;\n      const LoginActions = this.props.LoginActions;\n      LoginActions.changeIdInput(value);\n    };\n\n    this.handlePwChange = e => {\n      console.log('비밀번호 변경');\n      const value = e.target.value;\n      const LoginActions = this.props.LoginActions;\n      LoginActions.changePasswordInput(value);\n    };\n\n    this.handleKeyPress = e => {\n      if (e.key === 'enter') {\n        this.handleLogin();\n      }\n    };\n  }\n\n  render() {\n    const handleLogin = this.handleLogin,\n          handleIdChange = this.handleIdChange,\n          handlePwChange = this.handlePwChange,\n          handleKeyPress = this.handleKeyPress;\n    const _this$props2 = this.props,\n          error = _this$props2.error,\n          password = _this$props2.password,\n          userid = _this$props2.userid;\n    return React.createElement(Login, {\n      onLogin: handleLogin,\n      onIdChange: handleIdChange,\n      onPwChange: handlePwChange,\n      onKeyPress: handleKeyPress,\n      userid: userid,\n      password: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default connect(state => ({\n  id: state.login.getIn(['loginBox', 'id']),\n  password: state.login.getIn(['loginBox', 'password']),\n  error: state.login.getIn(['loginBox', 'error'])\n}), dispatch => ({\n  LoginActions: bindActionCreators(LoginActions, dispatch)\n}))(withRouter(LoginContainer));","map":{"version":3,"sources":["/Users/gang-eunsol/Desktop/blog-project/src/containers/login/LoginContainer.js"],"names":["React","PropTypes","connect","bindActionCreators","LoginActions","Login","withRouter","LoginContainer","Component","handleLogin","props","id","password","history","console","log","userid","login","push","e","handleIdChange","value","target","changeIdInput","handlePwChange","changePasswordInput","handleKeyPress","key","render","error","state","getIn","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as LoginActions from 'store/modules/login';\nimport Login from 'components/login/Login';\nimport { withRouter } from 'react-router-dom'\n\nclass LoginContainer extends React.Component {\n  handleLogin = async () =>{\n\n    const { LoginActions, id, password, history }= this.props;\n    console.log(userid, password);\n    try{\n      await LoginActions.login({userid, password});\n      history.push('/')\n    }catch(e){\n      console.log(e);\n    }\n  }\n  handleIdChange = (e) => {\n    console.log('아이디 변경');\n    const { value } = e.target;\n    const { LoginActions } = this.props;\n    LoginActions.changeIdInput(value);\n  }\n  handlePwChange = (e) => {\n    console.log('비밀번호 변경');\n    const { value } = e.target;\n    const { LoginActions } = this.props;\n    LoginActions.changePasswordInput(value);\n  }\n  handleKeyPress = (e) => {\n    if(e.key === 'enter'){\n      this.handleLogin();\n    }\n  }\n\n  render () {\n    const {\n      handleLogin, handleIdChange, handlePwChange, handleKeyPress\n    } = this;\n    const { error, password, userid} = this.props;\n    return (\n      <Login\n        onLogin={handleLogin} onIdChange={handleIdChange} onPwChange={handlePwChange} onKeyPress={handleKeyPress} userid={userid} password={password}\n      />\n    )\n  }\n}\n\nexport default connect(\n  (state) => ({\n    id : state.login.getIn(['loginBox', 'id']),\n    password : state.login.getIn(['loginBox', 'password']),\n    error : state.login.getIn(['loginBox', 'error'])\n  }),\n  (dispatch) => ({\n    LoginActions : bindActionCreators(LoginActions, dispatch)\n  })\n)(withRouter(LoginContainer));\n"]},"metadata":{},"sourceType":"module"}