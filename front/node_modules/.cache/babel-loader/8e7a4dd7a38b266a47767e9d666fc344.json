{"ast":null,"code":"var _jsxFileName = \"/Users/gang-eunsol/Desktop/blog-project/src/components/common/MarkdownRender/MarkdownRender.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './MarkdownRender.scss';\nimport classNames from 'classnames/bind';\nimport marked from 'marked';\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism-okaidia.css';\nimport 'prismjs/components/prism-bash.min.js';\nimport 'prismjs/components/prism-javascript.min.js';\nimport 'prismjs/components/prism-jsx.min.js';\nimport 'prismjs/components/prism-css.min.js';\nconst cx = classNames.bind(styles);\n\nclass MarkdownRender extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      html: ''\n    };\n\n    this.renderMarkdown = () => {\n      const markdown = this.props.markdown;\n\n      if (!markdown) {\n        this.setState({\n          html: ''\n        });\n        return;\n      }\n\n      this.setState({\n        html: marked(markdown, {\n          breaks: true,\n          sanitize: true\n        })\n      });\n    };\n\n    const _markdown = props.markdown;\n    this.state = {\n      html: _markdown ? marked(props.markdown, {\n        break: true,\n        sanitize: true\n      }) : ''\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.markdown !== this.props.markdown) {\n      this.renderMarkdown();\n    }\n\n    if (prevState.html !== this.state.html) {\n      Prism.highlightAll();\n    }\n  }\n\n  render() {\n    const html = this.state.html;\n    const markup = {\n      __html: html\n    };\n    return React.createElement(\"div\", {\n      className: cx('markdown-render'),\n      dangerouslySetInnerHTML: markup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default MarkdownRender;","map":{"version":3,"sources":["/Users/gang-eunsol/Desktop/blog-project/src/components/common/MarkdownRender/MarkdownRender.js"],"names":["React","PropTypes","styles","classNames","marked","Prism","cx","bind","MarkdownRender","Component","constructor","props","state","html","renderMarkdown","markdown","setState","breaks","sanitize","break","componentDidUpdate","prevProps","prevState","highlightAll","render","markup","__html"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,kCAAP;AACA,OAAO,sCAAP;AACA,OAAO,4CAAP;AACA,OAAO,qCAAP;AACA,OAAO,qCAAP;AAEA,MAAMC,EAAE,GAAGH,UAAU,CAACI,IAAX,CAAgBL,MAAhB,CAAX;;AAEA,MAAMM,cAAN,SAA6BR,KAAK,CAACS,SAAnC,CAA6C;AAoB3CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SAnBlBC,KAmBkB,GAnBV;AACNC,MAAAA,IAAI,EAAG;AADD,KAmBU;;AAAA,SAhBlBC,cAgBkB,GAhBD,MAAK;AAAA,YACZC,QADY,GACC,KAAKJ,KADN,CACZI,QADY;;AAEpB,UAAG,CAACA,QAAJ,EAAa;AACX,aAAKC,QAAL,CAAc;AACZH,UAAAA,IAAI,EAAG;AADK,SAAd;AAGA;AAED;;AACD,WAAKG,QAAL,CAAc;AACZH,QAAAA,IAAI,EAAGT,MAAM,CAACW,QAAD,EAAW;AACtBE,UAAAA,MAAM,EAAE,IADc;AAEtBC,UAAAA,QAAQ,EAAE;AAFY,SAAX;AADD,OAAd;AAMD,KACiB;;AAAA,UAERH,SAFQ,GAEKJ,KAFL,CAERI,QAFQ;AAGhB,SAAKH,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEE,SAAQ,GAAGX,MAAM,CAACO,KAAK,CAACI,QAAP,EAAiB;AAAEI,QAAAA,KAAK,EAAE,IAAT;AAAeD,QAAAA,QAAQ,EAAE;AAAzB,OAAjB,CAAT,GAA4D;AAD/D,KAAb;AAGD;;AACDE,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACtC,QAAGD,SAAS,CAACN,QAAV,KAAuB,KAAKJ,KAAL,CAAWI,QAArC,EAA8C;AAC5C,WAAKD,cAAL;AACD;;AACD,QAAGQ,SAAS,CAACT,IAAV,KAAmB,KAAKD,KAAL,CAAWC,IAAjC,EAAsC;AACpCR,MAAAA,KAAK,CAACkB,YAAN;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAI;AAAA,UACAX,IADA,GACS,KAAKD,KADd,CACAC,IADA;AAGR,UAAMY,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAGb;AADI,KAAf;AAIA,WACE;AAAK,MAAA,SAAS,EAAEP,EAAE,CAAC,iBAAD,CAAlB;AAAuC,MAAA,uBAAuB,EAAEmB,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA9C0C;;AAiD7C,eAAejB,cAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport styles from './MarkdownRender.scss';\nimport classNames from 'classnames/bind';\n\nimport marked from 'marked';\n\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism-okaidia.css';\nimport 'prismjs/components/prism-bash.min.js'\nimport 'prismjs/components/prism-javascript.min.js'\nimport 'prismjs/components/prism-jsx.min.js';\nimport 'prismjs/components/prism-css.min.js';\n\nconst cx = classNames.bind(styles);\n\nclass MarkdownRender extends React.Component {\n  state = {\n    html : ''\n  }\n  renderMarkdown = () =>{\n    const { markdown } = this.props;\n    if(!markdown){\n      this.setState({\n        html : ''\n      });\n      return;\n\n    }\n    this.setState({\n      html : marked(markdown, {\n        breaks: true,\n        sanitize: true\n      })\n    });\n  }\n  constructor(props){\n    super(props);\n    const { markdown } = props;\n    this.state = {\n      html: markdown ? marked(props.markdown, { break: true, sanitize: true}) : ''\n    }\n  }\n  componentDidUpdate(prevProps, prevState){\n    if(prevProps.markdown !== this.props.markdown){\n      this.renderMarkdown();\n    }\n    if(prevState.html !== this.state.html){\n      Prism.highlightAll();\n    }\n  }\n\n  render () {\n    const { html } = this.state;\n\n    const markup = {\n      __html : html\n    }\n\n    return (\n      <div className={cx('markdown-render')} dangerouslySetInnerHTML={markup}/>\n    )\n  }\n}\n\nexport default MarkdownRender;\n"]},"metadata":{},"sourceType":"module"}