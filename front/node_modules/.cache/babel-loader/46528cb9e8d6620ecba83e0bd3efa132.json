{"ast":null,"code":"var _jsxFileName = \"/Users/gang-eunsol/Desktop/blog-project/src/containers/post/Post.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PostInfo from 'components/post/PostInfo';\nimport PostBody from 'components/post/PostBody';\nimport * as postActions from 'store/modules/post';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nclass Post extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.initialize = async () => {\n      const _this$props = this.props,\n            postActions = _this$props.postActions,\n            id = _this$props.id;\n\n      try {\n        await postActions.getPost(id);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.initialize();\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          loading = _this$props2.loading,\n          post = _this$props2.post;\n    if (loading) return null;\n\n    const _post$toJS = post.toJS(),\n          title = _post$toJS.title,\n          contents = _post$toJS.contents,\n          createdAt = _post$toJS.createdAt;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(PostInfo, {\n      title: title,\n      publishedDate: createdAt,\n      tags: tags,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(PostBody, {\n      body: contents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  post: state.post.get('post'),\n  loading: state.pender.pending['post/GET_POST']\n}), dispatch => ({\n  postActions: bindActionCreators(postActions, dispatch)\n}))(Post);","map":{"version":3,"sources":["/Users/gang-eunsol/Desktop/blog-project/src/containers/post/Post.js"],"names":["React","PropTypes","PostInfo","PostBody","postActions","connect","bindActionCreators","Post","Component","initialize","props","id","getPost","e","console","log","componentDidMount","render","loading","post","toJS","title","contents","createdAt","tags","state","get","pender","pending","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAGA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SACjCC,UADiC,GACpB,YAAU;AAAA,0BACK,KAAKC,KADV;AAAA,YACdN,WADc,eACdA,WADc;AAAA,YACDO,EADC,eACDA,EADC;;AAErB,UAAG;AACD,cAAMP,WAAW,CAACQ,OAAZ,CAAoBD,EAApB,CAAN;AACD,OAFD,CAEC,OAAME,CAAN,EAAQ;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,KARgC;AAAA;;AASjCG,EAAAA,iBAAiB,GAAE;AACjB,SAAKP,UAAL;AACD;;AACDQ,EAAAA,MAAM,GAAI;AAAA,yBACiB,KAAKP,KADtB;AAAA,UACAQ,OADA,gBACAA,OADA;AAAA,UACSC,IADT,gBACSA,IADT;AAGR,QAAGD,OAAH,EAAY,OAAO,IAAP;;AAHJ,uBAK+BC,IAAI,CAACC,IAAL,EAL/B;AAAA,UAKAC,KALA,cAKAA,KALA;AAAA,UAKOC,QALP,cAKOA,QALP;AAAA,UAKiBC,SALjB,cAKiBA,SALjB;;AAOR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,KAAjB;AAAwB,MAAA,aAAa,EAAEE,SAAvC;AAAkD,MAAA,IAAI,EAAEC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAzBgC;;AA4BnC,eAAejB,OAAO,CACnBoB,KAAD,KAAY;AACVN,EAAAA,IAAI,EAAEM,KAAK,CAACN,IAAN,CAAWO,GAAX,CAAe,MAAf,CADI;AAEVR,EAAAA,OAAO,EAAEO,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqB,eAArB;AAFC,CAAZ,CADoB,EAKnBC,QAAD,KAAe;AACbzB,EAAAA,WAAW,EAAEE,kBAAkB,CAACF,WAAD,EAAcyB,QAAd;AADlB,CAAf,CALoB,CAAP,CAQbtB,IARa,CAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport PostInfo from 'components/post/PostInfo';\nimport PostBody from 'components/post/PostBody';\nimport * as postActions from 'store/modules/post';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n\nclass Post extends React.Component {\n  initialize = async ()=>{\n    const {postActions, id} = this.props;\n    try{\n      await postActions.getPost(id);\n    }catch(e){\n      console.log(e);\n    }\n  }\n  componentDidMount(){\n    this.initialize();\n  }\n  render () {\n    const { loading, post} = this.props;\n\n    if(loading) return null;\n\n    const { title, contents, createdAt } = post.toJS();\n\n    return (\n      <div>\n        <PostInfo title={title} publishedDate={createdAt} tags={tags}/>\n        <PostBody body={contents}/>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => ({\n    post: state.post.get('post'),\n    loading: state.pender.pending['post/GET_POST']\n  }),\n  (dispatch) => ({\n    postActions: bindActionCreators(postActions, dispatch)\n  })\n)(Post);\n"]},"metadata":{},"sourceType":"module"}