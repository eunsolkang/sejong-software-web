{"ast":null,"code":"module.exports = function (md, options) {\n  options = options || {};\n  options.listUnicodeChar = options.hasOwnProperty('listUnicodeChar') ? options.listUnicodeChar : false;\n  options.stripListLeaders = options.hasOwnProperty('stripListLeaders') ? options.stripListLeaders : true;\n  options.gfm = options.hasOwnProperty('gfm') ? options.gfm : true;\n  options.useImgAltText = options.hasOwnProperty('useImgAltText') ? options.useImgAltText : true;\n  var output = md || ''; // Remove horizontal rules (stripListHeaders conflict with this rule, which is why it has been moved to the top)\n\n  output = output.replace(/^(-\\s*?|\\*\\s*?|_\\s*?){3,}\\s*$/gm, '');\n\n  try {\n    if (options.stripListLeaders) {\n      if (options.listUnicodeChar) output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, options.listUnicodeChar + ' $1');else output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, '$1');\n    }\n\n    if (options.gfm) {\n      output = output // Header\n      .replace(/\\n={2,}/g, '\\n') // Fenced codeblocks\n      .replace(/~{3}.*\\n/g, '') // Strikethrough\n      .replace(/~~/g, '') // Fenced codeblocks\n      .replace(/`{3}.*\\n/g, '');\n    }\n\n    output = output // Remove HTML tags\n    .replace(/<[^>]*>/g, '') // Remove setext-style headers\n    .replace(/^[=\\-]{2,}\\s*$/g, '') // Remove footnotes?\n    .replace(/\\[\\^.+?\\](\\: .*?$)?/g, '').replace(/\\s{0,2}\\[.*?\\]: .*?$/g, '') // Remove images\n    .replace(/\\!\\[(.*?)\\][\\[\\(].*?[\\]\\)]/g, options.useImgAltText ? '$1' : '') // Remove inline links\n    .replace(/\\[(.*?)\\][\\[\\(].*?[\\]\\)]/g, '$1') // Remove blockquotes\n    .replace(/^\\s{0,3}>\\s?/g, '') // Remove reference-style links?\n    .replace(/^\\s{1,2}\\[(.*?)\\]: (\\S+)( \".*?\")?\\s*$/g, '') // Remove atx-style headers\n    .replace(/^(\\n)?\\s{0,}#{1,6}\\s+| {0,}(\\n)?\\s{0,}#{0,} {0,}(\\n)?\\s{0,}$/gm, '$1$2$3') // Remove emphasis (repeat the line to remove double emphasis)\n    .replace(/([\\*_]{1,3})(\\S.*?\\S{0,1})\\1/g, '$2').replace(/([\\*_]{1,3})(\\S.*?\\S{0,1})\\1/g, '$2') // Remove code blocks\n    .replace(/(`{3,})(.*?)\\1/gm, '$2') // Remove inline code\n    .replace(/`(.+?)`/g, '$1') // Replace two or more newlines with exactly two? Not entirely sure this belongs here...\n    .replace(/\\n{2,}/g, '\\n\\n');\n  } catch (e) {\n    console.error(e);\n    return md;\n  }\n\n  return output;\n};","map":null,"metadata":{},"sourceType":"script"}