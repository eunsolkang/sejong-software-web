{"ast":null,"code":"var _jsxFileName = \"/Users/gang-eunsol/Desktop/blog-project/src/components/modal/ModalWrapper/ModalWrapper.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ModalWrapper.scss';\nimport classNames from 'classnames/bind';\nconst cx = classNames.bind(styles);\n\nclass ModalWrapper extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      animation: false\n    };\n\n    this.startAnimation = () => {\n      this.setState({\n        animation: true\n      });\n      setTimeout(() => {\n        this.setState({\n          animation: false\n        });\n      }, 250);\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.visible !== this.props.visible) {\n      this.startAnimation();\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          children = _this$props.children,\n          visible = _this$props.visible;\n    const animate = this.state.animate;\n    if (!visible && !animate) return null;\n    const animation = animate && (visible ? 'enter' : 'leave');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cx('gray-background', animation),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: cx('modal-wrraper'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cx('modal', animation),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, children)));\n  }\n\n}\n\nexport default ModalWrapper;","map":{"version":3,"sources":["/Users/gang-eunsol/Desktop/blog-project/src/components/modal/ModalWrapper/ModalWrapper.js"],"names":["React","PropTypes","styles","classNames","cx","bind","ModalWrapper","Component","state","animation","startAnimation","setState","setTimeout","componentDidUpdate","prevProps","prevState","visible","props","render","children","animate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,MAAMC,EAAE,GAAID,UAAU,CAACE,IAAX,CAAgBH,MAAhB,CAAZ;;AAEA,MAAMI,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAEzCC,KAFyC,GAEjC;AACNC,MAAAA,SAAS,EAAG;AADN,KAFiC;;AAAA,SAKzCC,cALyC,GAKxB,MAAK;AACpB,WAAKC,QAAL,CAAc;AACZF,QAAAA,SAAS,EAAG;AADA,OAAd;AAGAG,MAAAA,UAAU,CAAC,MAAI;AACb,aAAKD,QAAL,CAAc;AACZF,UAAAA,SAAS,EAAG;AADA,SAAd;AAGD,OAJS,EAIP,GAJO,CAAV;AAKD,KAdwC;AAAA;;AAezCI,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACtC,QAAGD,SAAS,CAACE,OAAV,KAAsB,KAAKC,KAAL,CAAWD,OAApC,EAA4C;AAC1C,WAAKN,cAAL;AACD;AACF;;AACDQ,EAAAA,MAAM,GAAI;AAAA,wBAEsB,KAAKD,KAF3B;AAAA,UAEAE,QAFA,eAEAA,QAFA;AAAA,UAEUH,OAFV,eAEUA,OAFV;AAAA,UAGAI,OAHA,GAGY,KAAKZ,KAHjB,CAGAY,OAHA;AAIR,QAAG,CAACJ,OAAD,IAAY,CAACI,OAAhB,EAA0B,OAAO,IAAP;AAE1B,UAAMX,SAAS,GAAGW,OAAO,KAAKJ,OAAO,GAAG,OAAH,GAAa,OAAzB,CAAzB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEZ,EAAE,CAAC,iBAAD,EAAoBK,SAApB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAEL,EAAE,CAAC,eAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEA,EAAE,CAAC,OAAD,EAAUK,SAAV,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGU,QADH,CADF,CAFF,CADF;AAUD;;AArCwC;;AAwC3C,eAAeb,YAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './ModalWrapper.scss'\nimport classNames from 'classnames/bind';\n\nconst cx  = classNames.bind(styles)\n\nclass ModalWrapper extends React.Component {\n\n  state = {\n    animation : false\n  }\n  startAnimation = () =>{\n    this.setState({\n      animation : true\n    })\n    setTimeout(()=>{\n      this.setState({\n        animation : false\n      })\n    }, 250)\n  }\n  componentDidUpdate(prevProps, prevState){\n    if(prevProps.visible !== this.props.visible){\n      this.startAnimation();\n    }\n  }\n  render () {\n\n    const { children, visible } = this.props;\n    const { animate } = this.state;\n    if(!visible && !animate ) return null;\n\n    const animation = animate && (visible ? 'enter' : 'leave')\n    return (\n      <div>\n        <div className={cx('gray-background', animation)}/>\n        <div className={cx('modal-wrraper')}>\n          <div className={cx('modal', animation)}>\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalWrapper;\n"]},"metadata":{},"sourceType":"module"}