{"ast":null,"code":"import _defineProperty from \"/Users/gang-eunsol/Desktop/blog-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createAction, handleActions } from 'redux-actions';\nimport * as api from 'lib/api';\nimport { Map } from 'immutable';\nimport { pender } from 'redux-pender';\nconst GET_POST = 'editor/GET_POST';\nconst INITIALIZE = 'editor/INITIALIZE';\nconst CHANGE_INPUT = 'editor/CHANGE_INPUT';\nconst WRITE_POST = 'editor/WRITE_POST';\nconst EDIT_POST = 'editor/EDIT_POST';\nexport const getPost = createAction(GET_POST, api.getPost);\nexport const initialize = createAction(INITIALIZE);\nexport const changeInput = createAction(CHANGE_INPUT);\nexport const writePost = createAction(WRITE_POST, api.writePost);\nexport const editPost = createAction(EDIT_POST, api.editPost);\nconst initialState = Map({\n  title: '',\n  markdown: '',\n  tags: '',\n  postId: null\n});\nexport default handleActions(_objectSpread({\n  [INITIALIZE]: (state, action) => initialState,\n  [CHANGE_INPUT]: (state, action) => {\n    const _action$payload = action.payload,\n          name = _action$payload.name,\n          value = _action$payload.value;\n    return state.set(name, value);\n  }\n}, pender({\n  type: WRITE_POST,\n  onSuccess: (state, action) => {\n    const ix = action.payload.data.ix;\n    return state.set('postId', ix);\n  }\n}), {}, pender({\n  type: GET_POST,\n  onSuccess: (state, action) => {\n    const _action$payload$data = action.payload.data,\n          ix = _action$payload$data.ix,\n          title = _action$payload$data.title,\n          contents = _action$payload$data.contents;\n    return state.set('title', title).set('markdown', contents);\n  }\n})), initialState);","map":{"version":3,"sources":["/Users/gang-eunsol/Desktop/blog-project/src/store/modules/editor.js"],"names":["createAction","handleActions","api","Map","pender","GET_POST","INITIALIZE","CHANGE_INPUT","WRITE_POST","EDIT_POST","getPost","initialize","changeInput","writePost","editPost","initialState","title","markdown","tags","postId","state","action","payload","name","value","set","type","onSuccess","ix","data","contents"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;AAEA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,MAAMC,QAAQ,GAAG,iBAAjB;AACA,MAAMC,UAAU,GAAG,mBAAnB;AACA,MAAMC,YAAY,GAAG,qBAArB;AACA,MAAMC,UAAU,GAAG,mBAAnB;AACA,MAAMC,SAAS,GAAG,kBAAlB;AAEA,OAAO,MAAMC,OAAO,GAAGV,YAAY,CAACK,QAAD,EAAWH,GAAG,CAACQ,OAAf,CAA5B;AACP,OAAO,MAAMC,UAAU,GAAGX,YAAY,CAACM,UAAD,CAA/B;AACP,OAAO,MAAMM,WAAW,GAAGZ,YAAY,CAACO,YAAD,CAAhC;AACP,OAAO,MAAMM,SAAS,GAAGb,YAAY,CAACQ,UAAD,EAAaN,GAAG,CAACW,SAAjB,CAA9B;AACP,OAAO,MAAMC,QAAQ,GAAGd,YAAY,CAACS,SAAD,EAAYP,GAAG,CAACY,QAAhB,CAA7B;AAEP,MAAMC,YAAY,GAAGZ,GAAG,CAAC;AACvBa,EAAAA,KAAK,EAAG,EADe;AAEvBC,EAAAA,QAAQ,EAAE,EAFa;AAGvBC,EAAAA,IAAI,EAAE,EAHiB;AAIvBC,EAAAA,MAAM,EAAG;AAJc,CAAD,CAAxB;AAOA,eAAelB,aAAa;AAC1B,GAACK,UAAD,GAAe,CAACc,KAAD,EAAQC,MAAR,KAAmBN,YADR;AAE1B,GAACR,YAAD,GAAgB,CAACa,KAAD,EAAQC,MAAR,KAAmB;AAAA,4BACTA,MAAM,CAACC,OADE;AAAA,UACzBC,IADyB,mBACzBA,IADyB;AAAA,UACnBC,KADmB,mBACnBA,KADmB;AAEjC,WAAOJ,KAAK,CAACK,GAAN,CAAUF,IAAV,EAAgBC,KAAhB,CAAP;AACD;AALyB,GAMvBpB,MAAM,CAAC;AACRsB,EAAAA,IAAI,EAAElB,UADE;AAERmB,EAAAA,SAAS,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAAA,UACpBO,EADoB,GACbP,MAAM,CAACC,OAAP,CAAeO,IADF,CACpBD,EADoB;AAE5B,WAAOR,KAAK,CAACK,GAAN,CAAU,QAAV,EAAoBG,EAApB,CAAP;AACD;AALO,CAAD,CANiB,MAavBxB,MAAM,CAAC;AACRsB,EAAAA,IAAI,EAAGrB,QADC;AAERsB,EAAAA,SAAS,EAAG,CAACP,KAAD,EAAQC,MAAR,KAAoB;AAAA,iCACEA,MAAM,CAACC,OAAP,CAAeO,IADjB;AAAA,UACtBD,EADsB,wBACtBA,EADsB;AAAA,UAClBZ,KADkB,wBAClBA,KADkB;AAAA,UACXc,QADW,wBACXA,QADW;AAE9B,WAAOV,KAAK,CAACK,GAAN,CAAU,OAAV,EAAmBT,KAAnB,EACMS,GADN,CACU,UADV,EACsBK,QADtB,CAAP;AAED;AANO,CAAD,CAbiB,GAqBzBf,YArByB,CAA5B","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport * as api from 'lib/api'\n\nimport { Map } from 'immutable';\nimport { pender } from 'redux-pender';\n\nconst GET_POST = 'editor/GET_POST'\nconst INITIALIZE = 'editor/INITIALIZE';\nconst CHANGE_INPUT = 'editor/CHANGE_INPUT';\nconst WRITE_POST = 'editor/WRITE_POST';\nconst EDIT_POST = 'editor/EDIT_POST'\n\nexport const getPost = createAction(GET_POST, api.getPost)\nexport const initialize = createAction(INITIALIZE);\nexport const changeInput = createAction(CHANGE_INPUT);\nexport const writePost = createAction(WRITE_POST, api.writePost);\nexport const editPost = createAction(EDIT_POST, api.editPost);\n\nconst initialState = Map({\n  title : '',\n  markdown: '',\n  tags: '',\n  postId : null\n})\n\nexport default handleActions({\n  [INITIALIZE] : (state, action) => initialState,\n  [CHANGE_INPUT]: (state, action) => {\n    const { name, value } = action.payload;\n    return state.set(name, value);\n  },\n  ...pender({\n    type: WRITE_POST,\n    onSuccess: (state, action) => {\n      const { ix } = action.payload.data;\n      return state.set('postId', ix);\n    }\n  }),\n  ...pender({\n    type : GET_POST,\n    onSuccess : (state, action ) => {\n      const { ix, title, contents } = action.payload.data;\n      return state.set('title', title)\n                  .set('markdown', contents)\n    }\n  })\n}, initialState);\n"]},"metadata":{},"sourceType":"module"}