{"ast":null,"code":"var _jsxFileName = \"/Users/gang-eunsol/Desktop/blog-project/src/containers/login/LoginContainer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as LoginActions from 'store/modules/login';\nimport Login from 'components/login/Login';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogin = async () => {\n      const _this$props = this.props,\n            LoginActions = _this$props.LoginActions,\n            id = _this$props.id,\n            pw = _this$props.pw,\n            history = _this$props.history;\n      console.log(id, pw);\n\n      try {\n        await LoginActions.login({\n          id,\n          pw\n        });\n        console.log('로그인 성공');\n        history.push('/');\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handleIdChange = e => {\n      console.log('아이디 변경');\n      const value = e.target.value;\n      const LoginActions = this.props.LoginActions;\n      LoginActions.changeIdInput(value);\n    };\n\n    this.handlePwChange = e => {\n      console.log('비밀번호 변경');\n      const value = e.target.value;\n      const LoginActions = this.props.LoginActions;\n      LoginActions.changePasswordInput(value);\n    };\n\n    this.handleKeyPress = e => {\n      if (e.key === 'enter') {\n        this.handleLogin();\n      }\n    };\n  }\n\n  render() {\n    const handleLogin = this.handleLogin,\n          handleIdChange = this.handleIdChange,\n          handlePwChange = this.handlePwChange,\n          handleKeyPress = this.handleKeyPress;\n    const _this$props2 = this.props,\n          error = _this$props2.error,\n          pw = _this$props2.pw,\n          id = _this$props2.id;\n    return React.createElement(Login, {\n      onLogin: handleLogin,\n      onIdChange: handleIdChange,\n      onPwChange: handlePwChange,\n      onKeyPress: handleKeyPress,\n      userid: id,\n      password: pw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default connect(state => ({\n  id: state.login.getIn(['loginBox', 'id']),\n  pw: state.login.getIn(['loginBox', 'pw']),\n  error: state.login.getIn(['loginBox', 'error'])\n}), dispatch => ({\n  LoginActions: bindActionCreators(LoginActions, dispatch)\n}))(withRouter(LoginContainer));","map":{"version":3,"sources":["/Users/gang-eunsol/Desktop/blog-project/src/containers/login/LoginContainer.js"],"names":["React","PropTypes","connect","bindActionCreators","LoginActions","Login","withRouter","LoginContainer","Component","handleLogin","props","id","pw","history","console","log","login","push","e","handleIdChange","value","target","changeIdInput","handlePwChange","changePasswordInput","handleKeyPress","key","render","error","state","getIn","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as LoginActions from 'store/modules/login';\nimport Login from 'components/login/Login';\nimport { withRouter } from 'react-router-dom'\n\nclass LoginContainer extends React.Component {\n  handleLogin = async () =>{\n\n    const { LoginActions, id, pw, history }= this.props;\n    console.log(id, pw);\n    try{\n      await LoginActions.login({id, pw});\n      console.log('로그인 성공');\n      history.push('/')\n\n    }catch(e){\n      console.log(e);\n    }\n  }\n  handleIdChange = (e) => {\n    console.log('아이디 변경');\n    const { value } = e.target;\n    const { LoginActions } = this.props;\n    LoginActions.changeIdInput(value);\n  }\n  handlePwChange = (e) => {\n    console.log('비밀번호 변경');\n    const { value } = e.target;\n    const { LoginActions } = this.props;\n    LoginActions.changePasswordInput(value);\n  }\n  handleKeyPress = (e) => {\n    if(e.key === 'enter'){\n      this.handleLogin();\n    }\n  }\n\n  render () {\n    const {\n      handleLogin, handleIdChange, handlePwChange, handleKeyPress\n    } = this;\n    const { error, pw, id}= this.props;\n    return (\n      <Login\n        onLogin={handleLogin} onIdChange={handleIdChange} onPwChange={handlePwChange} onKeyPress={handleKeyPress} userid={id} password={pw}\n      />\n    )\n  }\n}\n\nexport default connect(\n  (state) => ({\n    id : state.login.getIn(['loginBox', 'id']),\n    pw : state.login.getIn(['loginBox', 'pw']),\n    error : state.login.getIn(['loginBox', 'error'])\n  }),\n  (dispatch) => ({\n    LoginActions : bindActionCreators(LoginActions, dispatch)\n  })\n)(withRouter(LoginContainer));\n"]},"metadata":{},"sourceType":"module"}