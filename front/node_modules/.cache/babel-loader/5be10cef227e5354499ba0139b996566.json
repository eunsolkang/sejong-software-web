{"ast":null,"code":"var _jsxFileName = \"/Users/gang-eunsol/Desktop/blog-project/src/containers/list/ListContainer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PostList from 'components/list/PostList';\nimport Paginaction from 'components/list/Paginaction';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as listActions from 'store/modules/list';\n\nclass ListContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getPostList = () => {\n      const ListActions = this.props.ListActions;\n      ListActions.getPostList();\n    };\n  }\n\n  componentDidMount() {\n    this.getPostList();\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    const _this$props = this.props,\n          loading = _this$props.loading,\n          posts = _this$props.posts;\n    if (loading) return null;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(PostList, {\n      posts: posts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Paginaction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  posts: state.list.get('posts'),\n  loading: state.pender.pending['list/GET_POST_LIST']\n}), dispatch => ({\n  ListActions: bindActionCreators(listActions, dispatch)\n}))(ListContainer);","map":{"version":3,"sources":["/Users/gang-eunsol/Desktop/blog-project/src/containers/list/ListContainer.js"],"names":["React","PropTypes","PostList","Paginaction","connect","bindActionCreators","listActions","ListContainer","Component","getPostList","ListActions","props","componentDidMount","componentDidUpdate","prevProps","prevState","render","loading","posts","state","list","get","pender","pending","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;;AAEA,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAC1CC,WAD0C,GAC5B,MAAK;AAAA,YACVC,WADU,GACM,KAAKC,KADX,CACVD,WADU;AAEjBA,MAAAA,WAAW,CAACD,WAAZ;AACD,KAJyC;AAAA;;AAK1CG,EAAAA,iBAAiB,GAAE;AACjB,SAAKH,WAAL;AACD;;AACDI,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB,CAEvC;;AACDC,EAAAA,MAAM,GAAI;AAAA,wBACmB,KAAKL,KADxB;AAAA,UACAM,OADA,eACAA,OADA;AAAA,UACSC,KADT,eACSA,KADT;AAER,QAAID,OAAJ,EAAc,OAAO,IAAP;AAEd,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AArByC;;AAwB5C,eAAed,OAAO,CACnBe,KAAD,KAAY;AACVD,EAAAA,KAAK,EAAGC,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,OAAf,CADE;AAEVJ,EAAAA,OAAO,EAAGE,KAAK,CAACG,MAAN,CAAaC,OAAb,CAAqB,oBAArB;AAFA,CAAZ,CADoB,EAKnBC,QAAD,KAAe;AACbd,EAAAA,WAAW,EAAGL,kBAAkB,CAACC,WAAD,EAAckB,QAAd;AADnB,CAAf,CALoB,CAAP,CAQbjB,aARa,CAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport PostList from 'components/list/PostList';\nimport Paginaction from 'components/list/Paginaction'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as listActions from 'store/modules/list';\n\nclass ListContainer extends React.Component {\n  getPostList = () =>{\n    const {ListActions } = this.props;\n    ListActions.getPostList();\n  }\n  componentDidMount(){\n    this.getPostList();\n  }\n  componentDidUpdate(prevProps, prevState){\n\n  }\n  render () {\n    const { loading, posts } = this.props;\n    if (loading ) return null;\n\n    return (\n      <div>\n        <PostList posts={posts}/>\n        <Paginaction/>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => ({\n    posts : state.list.get('posts'),\n    loading : state.pender.pending['list/GET_POST_LIST']\n  }),\n  (dispatch) => ({\n    ListActions : bindActionCreators(listActions, dispatch)\n  })\n)(ListContainer);\n"]},"metadata":{},"sourceType":"module"}