{"ast":null,"code":"import _defineProperty from \"/Users/gang-eunsol/Desktop/blog-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createAction, handleActions } from 'redux-actions';\nimport { Map } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from 'lib/api';\nconst LOGIN = 'login/LOGIN';\nconst CHECK_LOGIN = 'login/CHECK_LOGIN';\nconst CHANGE_ID_INPUT = 'login/CHANGE_ID_INPUT';\nconst CHANGE_PASSWORD_INPUT = 'login/CHANGE_PASSWORD_INPUT';\nexport const login = createAction(LOGIN, api.login);\nexport const checkLogin = createAction(CHECK_LOGIN, api.checkLogin);\nexport const changePasswordInput = createAction(CHANGE_PASSWORD_INPUT);\nexport const changeIdInput = createAction(CHANGE_ID_INPUT);\nconst initialState = Map({\n  loginBox: Map({\n    id: '',\n    password: ''\n  }),\n  logged: false\n});\nexport default handleActions(_objectSpread({}, pender({\n  type: LOGIN,\n  onSuccess: (state, action) => {\n    return state.set('logged', true);\n  },\n  onError: (state, action) => {\n    return state.setIn(['loginBox', 'error'], true).setIn(['loginBox', 'id'], '').setIn(['loginBox', 'password'], '');\n  }\n}), {}, pender({\n  type: CHECK_LOGIN,\n  onSuccess: (state, action) => {\n    const logged = action.payload.data.logged;\n    return state.set('logged', logged);\n  }\n}), {\n  [CHANGE_ID_INPUT]: (state, action) => {\n    const value = action.payload;\n    return state.setIn(['loginBox', 'id'], value);\n  },\n  [CHANGE_PASSWORD_INPUT]: (state, action) => {\n    const value = action.payload;\n    return state.setIn(['loginBox', 'password'], value);\n  }\n}), initialState);","map":{"version":3,"sources":["/Users/gang-eunsol/Desktop/blog-project/src/store/modules/login.js"],"names":["createAction","handleActions","Map","pender","api","LOGIN","CHECK_LOGIN","CHANGE_ID_INPUT","CHANGE_PASSWORD_INPUT","login","checkLogin","changePasswordInput","changeIdInput","initialState","loginBox","id","password","logged","type","onSuccess","state","action","set","onError","setIn","payload","data","value"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;AAEA,MAAMC,KAAK,GAAG,aAAd;AACA,MAAMC,WAAW,GAAG,mBAApB;AACA,MAAMC,eAAe,GAAG,uBAAxB;AACA,MAAMC,qBAAqB,GAAG,6BAA9B;AAEA,OAAO,MAAMC,KAAK,GAAGT,YAAY,CAACK,KAAD,EAAQD,GAAG,CAACK,KAAZ,CAA1B;AACP,OAAO,MAAMC,UAAU,GAAGV,YAAY,CAACM,WAAD,EAAcF,GAAG,CAACM,UAAlB,CAA/B;AACP,OAAO,MAAMC,mBAAmB,GAAGX,YAAY,CAACQ,qBAAD,CAAxC;AACP,OAAO,MAAMI,aAAa,GAAGZ,YAAY,CAACO,eAAD,CAAlC;AAEP,MAAMM,YAAY,GAAGX,GAAG,CAAC;AACvBY,EAAAA,QAAQ,EAAEZ,GAAG,CAAC;AACZa,IAAAA,EAAE,EAAG,EADO;AAEZC,IAAAA,QAAQ,EAAG;AAFC,GAAD,CADU;AAKvBC,EAAAA,MAAM,EAAG;AALc,CAAD,CAAxB;AAQA,eAAehB,aAAa,mBACvBE,MAAM,CAAC;AACRe,EAAAA,IAAI,EAAEb,KADE;AAERc,EAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAC3B,WAAOD,KAAK,CAACE,GAAN,CAAU,QAAV,EAAoB,IAApB,CAAP;AACD,GAJO;AAKRC,EAAAA,OAAO,EAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC3B,WAAOD,KAAK,CAACI,KAAN,CAAY,CAAC,UAAD,EAAa,OAAb,CAAZ,EAAmC,IAAnC,EACMA,KADN,CACY,CAAC,UAAD,EAAa,IAAb,CADZ,EACgC,EADhC,EAEMA,KAFN,CAEY,CAAC,UAAD,EAAa,UAAb,CAFZ,EAEsC,EAFtC,CAAP;AAGD;AATO,CAAD,CADiB,MAYvBrB,MAAM,CAAC;AACRe,EAAAA,IAAI,EAAGZ,WADC;AAERa,EAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAAA,UACpBJ,MADoB,GACTI,MAAM,CAACI,OAAP,CAAeC,IADN,CACpBT,MADoB;AAE5B,WAAOG,KAAK,CAACE,GAAN,CAAU,QAAV,EAAoBL,MAApB,CAAP;AACD;AALO,CAAD,CAZiB;AAmB1B,GAACV,eAAD,GAAmB,CAACa,KAAD,EAAQC,MAAR,KAAmB;AAAA,UAClBM,KADkB,GACTN,MADS,CAC5BI,OAD4B;AAEpC,WAAOL,KAAK,CAACI,KAAN,CAAY,CAAC,UAAD,EAAa,IAAb,CAAZ,EAAgCG,KAAhC,CAAP;AACD,GAtByB;AAuB1B,GAACnB,qBAAD,GAAyB,CAACY,KAAD,EAAQC,MAAR,KAAmB;AAAA,UACxBM,KADwB,GACfN,MADe,CAClCI,OADkC;AAE1C,WAAOL,KAAK,CAACI,KAAN,CAAY,CAAC,UAAD,EAAa,UAAb,CAAZ,EAAsCG,KAAtC,CAAP;AACD;AA1ByB,IA4BzBd,YA5ByB,CAA5B","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\n\nimport { Map } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from 'lib/api'\n\nconst LOGIN = 'login/LOGIN';\nconst CHECK_LOGIN = 'login/CHECK_LOGIN';\nconst CHANGE_ID_INPUT = 'login/CHANGE_ID_INPUT';\nconst CHANGE_PASSWORD_INPUT = 'login/CHANGE_PASSWORD_INPUT';\n\nexport const login = createAction(LOGIN, api.login);\nexport const checkLogin = createAction(CHECK_LOGIN, api.checkLogin);\nexport const changePasswordInput = createAction(CHANGE_PASSWORD_INPUT);\nexport const changeIdInput = createAction(CHANGE_ID_INPUT);\n\nconst initialState = Map({\n  loginBox: Map({\n    id : '',\n    password : ''\n  }),\n  logged : false\n});\n\nexport default handleActions({\n  ...pender({\n    type: LOGIN,\n    onSuccess: (state, action) =>{\n      return state.set('logged', true);\n    },\n    onError : (state, action) => {\n      return state.setIn(['loginBox', 'error'], true)\n                  .setIn(['loginBox', 'id'], '')\n                  .setIn(['loginBox', 'password'], '');\n    }\n  }),\n  ...pender({\n    type : CHECK_LOGIN,\n    onSuccess: (state, action) => {\n      const { logged } = action.payload.data;\n      return state.set('logged', logged);\n    }\n  }),\n  [CHANGE_ID_INPUT]: (state, action) => {\n    const { payload : value} = action;\n    return state.setIn(['loginBox', 'id'], value);\n  },\n  [CHANGE_PASSWORD_INPUT]: (state, action) => {\n    const { payload : value} = action;\n    return state.setIn(['loginBox', 'password'], value);\n  },\n\n}, initialState);\n"]},"metadata":{},"sourceType":"module"}